using NF.Tools.DataFlow;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Windows.Forms;
using System.Linq;

namespace DataFlowGUI
{
    public partial class DataFlowGUIForm : Form
    {
        public DataFlowGUIForm()
        {
            InitializeComponent();
        }

        private void OnListExcel_DragDrop(object sender, DragEventArgs e)
        {
            bool xx = e.Data.GetDataPresent(DataFormats.FileDrop);
            if (!xx)
            {
                return;
            }

            object dd = e.Data.GetData(DataFormats.FileDrop);
            if (dd == null)
            {
                return;
            }

            string[] paths = dd as string[];
            if (paths == null)
            {
                return;
            }

            foreach (var x in DataFlowRunner.GetExcelFpaths(paths))
            {
                list_excel.Items.Add(x);
            }
        }

        private void OnListExcel_DragEnter(object sender, DragEventArgs e)
        {
            e.Effect = DragDropEffects.Link;
        }

        private void OnListExcel_DragOver(object sender, DragEventArgs e)
        {

        }

        private void OnBtnRemove_Click(object sender, System.EventArgs e)
        {
            while (list_excel.SelectedItems.Count > 0)
            {
                list_excel.Items.Remove(list_excel.SelectedItem);
            }
        }

        private void OnBtnBrowseSrc_Click(object sender, System.EventArgs e)
        {
            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.Multiselect = true;
                openFileDialog.Filter = "excel files (*.xlsx)|*.xlsx";
                openFileDialog.RestoreDirectory = true;

                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    foreach (string fileName in openFileDialog.FileNames)
                    {
                        list_excel.Items.Add(fileName);
                    }
                }
            }
        }

        private void OnBtnGo_Click(object sender, System.EventArgs e)
        {
            int listCount = list_excel.Items.Count;
            if (listCount == 0)
            {
                return;
            }

            List<string> xs = new List<string>(list_excel.Items.Count);
            foreach (var item in list_excel.Items)
            {
                xs.Add(item.ToString());
            }

            DataFlowRunnerOption opt = new DataFlowRunnerOption
            {
                input_paths = xs,
                @namespace = "AutoGenerated.DB",
                output_db_path = "C:/temp/output.db",
            };
            int ret = DataFlowRunner.Run(opt);
        }

        private void OnBtnBrowseDst_Click(object sender, System.EventArgs e)
        {
            using (OpenFileDialog openFileDialog = new OpenFileDialog())
            {
                openFileDialog.Multiselect = false;
                openFileDialog.Filter = "db files (*.db)|*.db";
                openFileDialog.RestoreDirectory = true;

                if (openFileDialog.ShowDialog() == DialogResult.OK)
                {
                    txt_dst.Text = openFileDialog.FileName;
                }
            }
        }
    }
}