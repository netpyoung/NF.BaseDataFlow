using Microsoft.VisualStudio.TestTools.UnitTesting;
using NF.Tools.DataFlow.Internal;
using NPOI.SS.UserModel;
using NPOI.XSSF.UserModel;
using System.IO;

namespace NF.Tools.DataFlow.Test;

[TestClass]
public class UnitTest1
{
    public static IWorkbook Excel { get; private set; }
    DataFlowRunnerOption opt = new DataFlowRunnerOption
    {
        in_paths = new string[] { "C:/prj/nf.data-flow/excels" },
        out_csharp = "output",
        @namespace = "AutoGenerated.DB",
    };

    [ClassInitialize()]
    public static void ClassInit(TestContext context)
    {
        Excel = GetExcel("C:/prj/nf.data-flow/excels/test.xlsx");
        ISheet sheet = Excel.GetSheetAt(0);
        var row = sheet.GetRow(0);
        var cell = row.GetCell(0);
        cell.ToString();
    }
    private static IWorkbook GetExcel(string excelFpath)
    {
        using (FileStream fileStream = File.Open(excelFpath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite))
        {
            XSSFWorkbook workbook = new XSSFWorkbook(fileStream);
            // force evaulate! NPOI.XSSF.UserModel.XSSFFormulaEvaluator.EvaluateAllFormulaCells(workbook)
            return workbook;
        }
    }

    [TestMethod]
    public void EnumGetSheet()
    {
        var excel = Excel;
        ISheet sheet = excel.GetSheetAt(0);
        Assert.AreEqual(4, SheetInfo.GetColumnCount(sheet));
        Assert.AreEqual(9, SheetInfo.GetRowCount(sheet));

        SheetInfo.TryGetSheetInfo(sheet, opt, out SheetInfo sheetInfo);
        var x = EnumSheet.GetOrNull(sheetInfo);
        Assert.AreEqual(6, x.Contents.Length);
    }

    [TestMethod]
    public void ConstGetSheet()
    {
        var excel = Excel;
        ISheet sheet = excel.GetSheetAt(1);
        Assert.AreEqual(6, SheetInfo.GetColumnCount(sheet));
        Assert.AreEqual(9, SheetInfo.GetRowCount(sheet));

        SheetInfo.TryGetSheetInfo(sheet, opt, out SheetInfo sheetInfo);
        var x = ConstSheet.GetOrNull(sheetInfo);
        Assert.AreEqual(6, x.Contents.Length);
    }

    [TestMethod]
    public void ClassGetSheet()
    {
        var excel = Excel;
        ISheet sheet = excel.GetSheetAt(2);
        Assert.AreEqual(5, SheetInfo.GetColumnCount(sheet));
        Assert.AreEqual(11, SheetInfo.GetRowCount(sheet));

        SheetInfo.TryGetSheetInfo(sheet, opt, out SheetInfo sheetInfo);
        var x = ClassSheet.GetOrNull(sheetInfo);
        Assert.AreEqual(4, x.Contents.Length);
    }

    [TestMethod]
    public void TryGetWorkbookInfo()
    {
        var excel = Excel;
        Assert.IsTrue(WorkbookInfo.TryGetWorkbookInfo(excel, opt, out var workbookInfo));
        Assert.AreEqual(1, workbookInfo.ConstSheets.Length);
        Assert.AreEqual(1, workbookInfo.ClassSheets.Length);
        Assert.AreEqual(1, workbookInfo.EnumSheets.Length);
    }
}